AWSTemplateFormatVersion: 2010-09-09
Description: ---

Parameters:
  LambdaSrcBucketName:
    Description: Bucket store src code for lambda function
    Type: String
    Default: test-image-stock-lambda-src-bucket

  GetImageFuncName:
    Description: Get image function name
    Type: String
    Default: GetImageFunc

  ImageTableName:
    Type: String

  RestApiId:
    Type: String

  ResourceId:
    Type: String

  AuthorizerId:
    Type: String

  SignedUrlExpired:
    Type: Number
    Default: 60

Resources: 
  GetImageFunc:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaSrcBucketName
        S3Key: get-image/function.zip
      FunctionName: !Ref GetImageFuncName
      Handler: function/index.handler
      MemorySize: 128
      Role: !GetAtt GetImageFuncRole.Arn
      Runtime: nodejs12.x
      Timeout: 10
      Environment:
        Variables:
          IMAGE_TABLE_NAME: !Ref ImageTableName
          SIGNED_URL_EXPIRED: !Ref SignedUrlExpired

  GetImageFuncPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GetImageFunc
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt  GetImageFunc.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiId}/*/GET/images'

  GetImageFuncVersion:
    Type: AWS::Lambda::Version
    Properties: 
      FunctionName: !Ref GetImageFunc
      Description: v1
      ProvisionedConcurrencyConfig:
        ProvisionedConcurrentExecutions: 1

  GetImageFuncDevAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref GetImageFunc
      FunctionVersion: $LATEST
      Name: DEV

  GetImageFuncProdAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref GetImageFunc
      FunctionVersion: !GetAtt GetImageFuncVersion.Version
      Name: PROD

  GetImageFuncDevRole:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GetImageFuncDevAlias
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetImageFuncDevAlias
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiId}/*/GET/images'
  
  GetImageFuncProdRole:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GetImageFuncProdAlias
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetImageFuncProdAlias
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiId}/*/GET/images'

  RestAPIGetImageMethod:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GetImageFunc
      - GetImageFuncProdRole
      - GetImageFuncDevRole
    Properties:
      ApiKeyRequired: false
      HttpMethod: GET
      Integration:
        ConnectionType: INTERNET
        IntegrationHttpMethod: POST
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS_PROXY
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref AWS::Region
            - ':lambda:path/2015-03-31/functions/'
            - !GetAtt GetImageFunc.Arn
            - ':${stageVariables.LambdaAlias}/invocations'
      ResourceId: !Ref ResourceId
      RestApiId: !Ref RestApiId
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref AuthorizerId

  GetImageFuncRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
      Path: /
      Policies:
        - 
          PolicyName: logs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - 
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        -
          PolicyName: AllowGetItemDynamoDB
          PolicyDocument:
            Statement:
              -
                Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource: arn:aws:dynamodb:*:*:*